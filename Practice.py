import pandas as pd
import numpy as np 

print('Exercises with Pandas')
print('*********************')

data_frame = pd.read_csv('./pokemon_data.csv')
print(data_frame)
print(' ')
print('*********************')
print('Exercise 01: Show the first 5 rows of the dataframe')
print(data_frame.head(5))
print(' ')
print('*********************')
print('Exercise 02: Show the last 5 rows of the dataframe')
print(data_frame.tail(5))
print(' ')
print('*********************')
print('Exercise 03: Show the columns of the dataframe')
print(data_frame.columns)
print(' ')
print('*********************')
print('Print only columns Name and Type 1 of the first 10 rows')
print(data_frame[['Name', 'Type 1']].head(10))
print(' ')
print('*********************')
print('Exercise 04: Show the data types of the dataframe')
print(data_frame.dtypes)
print(' ')
print('*********************')
print('Exercise 05: Show the index of the dataframe')
print(data_frame.index)
print(' ')
print('*********************')
print('Exercise 06: Show the values of the dataframe')
print(data_frame.values)
print(' ')
print('*********************')
# Exercise 07: Print the row 133 and column 6 of the dataframe
print('Exercise 07: Print the row 133 and column 6 of the dataframe')
print(data_frame.iloc[133, 6])
print(' ')
print('*********************')
# Exercise 08: Using loc function print all pokemons with attack of more than 80
print('Exercise 08: Using loc function print all pokemons with attack of more than 80')
print(data_frame.loc[data_frame['Attack'] > 80])
print(' ')
print('*********************')
# Exercise 09: Use loc function with logical operations as index to print how many legendary pokemons are in the dataframe
print('Exercise 09: Use loc function with logical operations as index to print how many legendary pokemons are in the dataframe')
print(data_frame.loc[data_frame['Legendary'] == True].count())
print(' ')
print('*********************')
# same as above using len() function
print('same as above using len() function')
print(len(data_frame.loc[data_frame['Legendary'] == True]))
print(' ')
print('*********************')
print('*********************')
print('New DataFrame')
print(' ')
data_frame_2 = pd.read_csv('./us_baby_names_right.csv')
print(data_frame_2.head(5))
print(' ')
print('*********************')
# Exercise 10: Show the columns of the dataframe
print('Exercise 10: Show the columns of the dataframe')
print(data_frame_2.columns)
print(' ')
print('*********************')
# Exercise 11: Remove the column 'Unnamed: 0' of the Dataset and show the first 5 records
print('Exercise 11: Remove the column "Unnamed: 0" of the Dataset and show the first 5 records')
data_frame_2.drop('Unnamed: 0', axis=1, inplace=True) # axis=1 means column and inplace=True means that the change will be permanent
print(data_frame_2.head(5))
print(' ')
print('*********************')
# Exercise 12: Using value_counts function get the gender value count and print it
print('Exercise 12: Using value_count function get the gender value count and print it')
gender_counts = data_frame_2['Gender'].value_counts()
print(gender_counts)
print(' ')
print('*********************')
# Exercise 13: Using value_counts function get the state value count and print it
# print('Exercise 13: Using value_count function get the state value count and print it')
# state_counts = data_frame_2['State'].value_counts()
# print(state_counts)
# print(' ')
# print('*********************')
# Exercise 14: Use groupby function to group data by name, the sum() function to count the number of grouped ocurrences and the len(result) to count the number of groups
print('Exercise 14: Use groupby function to group data by name, the sum() function to count the number of grouped ocurrences and the len(result) to count the number of groups')
result = data_frame_2.groupby(['Name']).sum() # group by name and sum the values
print(len(result)) # print the number of groups
print(' ')
print('*********************')

